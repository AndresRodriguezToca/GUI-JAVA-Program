/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaguiprogram;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author rodri
 */
public class frameStaff extends javax.swing.JFrame {

    /**
     * Creates new form frameStaff
     */
    public frameStaff() {
        this.setUndecorated(false);
        this.setResizable(false);
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelDBStatus = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelID = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jLabelLN = new javax.swing.JLabel();
        jLabelFN = new javax.swing.JLabel();
        jLabelMI = new javax.swing.JLabel();
        jLabelAD = new javax.swing.JLabel();
        jLabelST = new javax.swing.JLabel();
        jLabelCI = new javax.swing.JLabel();
        jTextFieldLN = new javax.swing.JTextField();
        jTextFieldFN = new javax.swing.JTextField();
        jTextFieldMI = new javax.swing.JTextField();
        jTextFieldAD = new javax.swing.JTextField();
        jTextFieldCT = new javax.swing.JTextField();
        jTextFieldST = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldTP = new javax.swing.JTextField();
        jButtonView = new javax.swing.JButton();
        jButtonInsert = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelDBStatus.setText("Database Status");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Staff Information"));

        jLabelID.setText("ID");

        jTextFieldID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldIDFocusLost(evt);
            }
        });

        jLabelLN.setText("Last Name");

        jLabelFN.setText("First Name");

        jLabelMI.setText("mi");

        jLabelAD.setText("Address");

        jLabelST.setText("State");

        jLabelCI.setText("City");

        jLabel1.setText("Telephone");

        jButtonView.setText("View");
        jButtonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewActionPerformed(evt);
            }
        });

        jButtonInsert.setText("Insert");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonClear.setText("Clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabelID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelLN)
                                    .addComponent(jLabelAD)
                                    .addComponent(jLabelCI))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextFieldLN)
                                            .addComponent(jTextFieldCT, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabelFN)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextFieldFN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabelST)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextFieldST, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jTextFieldAD, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelMI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldMI, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldTP)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButtonView, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelID)
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLN)
                    .addComponent(jTextFieldLN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelFN)
                    .addComponent(jTextFieldFN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMI)
                    .addComponent(jTextFieldMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAD)
                    .addComponent(jTextFieldAD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCI)
                    .addComponent(jTextFieldCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelST)
                    .addComponent(jTextFieldST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonView)
                    .addComponent(jButtonInsert)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonClear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDBStatus)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelDBStatus)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        jTextFieldID.setText("");
        jTextFieldAD.setText("");
        jTextFieldCT.setText("");
        jTextFieldFN.setText("");
        jTextFieldLN.setText("");
        jTextFieldMI.setText("");
        jTextFieldST.setText("");
        jTextFieldTP.setText("");
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jTextFieldIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIDFocusLost
        jTextFieldID.setBackground(Color.yellow);
    }//GEN-LAST:event_jTextFieldIDFocusLost

    private void jButtonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewActionPerformed
        String tempID = jTextFieldID.getText();
        if("".equals(tempID) || " ".equals(tempID) ||tempID.length() != 9){
            JOptionPane.showMessageDialog(rootPane, "Hey, that ID it's invalid");
        }else {
        //Make connection and deposit
        String url = "jdbc:mysql://127.0.0.1:3306/dbuser";
        String username = "root";
        String passwordDB = "andres12345";
        frameStaff a = new frameStaff();
        boolean update = true;
        try {
            runMe(url,"dbuser",username,passwordDB, tempID, "","","","","","","true",update);
        } catch (Exception ex) {
            Logger.getLogger(frameStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButtonViewActionPerformed

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        String tempID = jTextFieldID.getText();
        String tempAddress = jTextFieldAD.getText();
        String tempCity = jTextFieldCT.getText();
        String tempFirstName = jTextFieldFN.getText();
        String tempLastName = jTextFieldLN.getText();
        String tempMI = jTextFieldMI.getText();
        String tempState = jTextFieldST.getText();
        String tempPhone = jTextFieldTP.getText();
        
        if(tempID.length() != 9){
            JOptionPane.showMessageDialog(rootPane, "Hey, that ID it's invalid.");
        } else if("".equals(tempLastName) || " ".equals(tempLastName) || tempLastName.length() < 5){
            JOptionPane.showMessageDialog(rootPane, "Hey, your last name cannot be empty or be to short.");
        } else if("".equals(tempFirstName) || " ".equals(tempFirstName) || tempFirstName.length() < 2){
            JOptionPane.showMessageDialog(rootPane, "Hey, your name cannot be empty or be to short.");
        } else if("".equals(tempMI) || " ".equals(tempMI) || (!"F".equals(tempMI) && !"M".equals(tempMI))){
            JOptionPane.showMessageDialog(rootPane, "Your gender it's invalid, please use 'F' for female or 'M' for male.");
        } else if("".equals(tempAddress) || " ".equals(tempAddress) || tempAddress.length() < 10){
            JOptionPane.showMessageDialog(rootPane, "Hey, your address cannot be empty or address to short.");
        } else if(tempCity.length() < 3 || "".equals(tempCity) || " ".equals(tempCity)){
            JOptionPane.showMessageDialog(rootPane, "Hey, your city cannot be empty or be to short.");
        } else if(tempState.length() != 2 || "".equals(tempState) || " ".equals(tempState)){
            JOptionPane.showMessageDialog(rootPane, "Hey, your state cannot be empty or address to short.");
        } else if("".equals(tempPhone) || " ".equals(tempPhone) || tempPhone.length() != 10){
            JOptionPane.showMessageDialog(rootPane, "Your phone number it's invalid.");
        } else {
            
        //Make connection and deposit
        String url = "jdbc:mysql://127.0.0.1:3306/dbuser";
        String username = "root";
        String passwordDB = "andres12345";
        frameStaff a = new frameStaff();
        boolean update = false;
        try {
            runMe(url,"dbuser",username,passwordDB, tempID, tempAddress,tempCity,tempFirstName,tempLastName,tempMI,tempState,tempPhone,update);
        } catch (Exception ex) {
            Logger.getLogger(frameStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        String tempID = jTextFieldID.getText();
        String tempAddress = jTextFieldAD.getText();
        String tempCity = jTextFieldCT.getText();
        String tempFirstName = jTextFieldFN.getText();
        String tempLastName = jTextFieldLN.getText();
        String tempMI = jTextFieldMI.getText();
        String tempState = jTextFieldST.getText();
        String tempPhone = jTextFieldTP.getText();
        
        if(tempID.length() != 9){
            JOptionPane.showMessageDialog(rootPane, "Hey, that ID it's invalid.");
        } else if("".equals(tempLastName) || " ".equals(tempLastName) || tempLastName.length() < 5){
            JOptionPane.showMessageDialog(rootPane, "Hey, your last name cannot be empty or be to short.");
        } else if("".equals(tempFirstName) || " ".equals(tempFirstName) || tempFirstName.length() < 2){
            JOptionPane.showMessageDialog(rootPane, "Hey, your name cannot be empty or be to short.");
        } else if("".equals(tempMI) || " ".equals(tempMI) || (!"F".equals(tempMI) && !"M".equals(tempMI))){
            JOptionPane.showMessageDialog(rootPane, "Your gender it's invalid, please use 'F' for female or 'M' for male.");
        } else if("".equals(tempAddress) || " ".equals(tempAddress) || tempAddress.length() < 10){
            JOptionPane.showMessageDialog(rootPane, "Hey, your address cannot be empty or address to short.");
        } else if(tempCity.length() < 3 || "".equals(tempCity) || " ".equals(tempCity)){
            JOptionPane.showMessageDialog(rootPane, "Hey, your city cannot be empty or be to short.");
        } else if(tempState.length() != 2 || "".equals(tempState) || " ".equals(tempState)){
            JOptionPane.showMessageDialog(rootPane, "Hey, your state cannot be empty or address to short.");
        } else if("".equals(tempPhone) || " ".equals(tempPhone) || tempPhone.length() != 12 && !tempPhone.contains("-")){
            JOptionPane.showMessageDialog(rootPane, "Your phone number it's invalid, please use '-' to separate the numbers. Example 111-111-1111.");
        } else {
            //Make connection and deposit
        String url = "jdbc:mysql://127.0.0.1:3306/dbuser";
        String username = "root";
        String passwordDB = "andres12345";
        frameStaff a = new frameStaff();
        boolean update = true;
        try {
            runMe(url,"dbuser",username,passwordDB, tempID, tempAddress,tempCity,tempFirstName,tempLastName,tempMI,tempState,tempPhone, update);
        } catch (Exception ex) {
            Logger.getLogger(frameStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    /**
     * @throws java.lang.Exception
     */
    //Driver Test
    protected void driverTest() throws Exception {

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            System.out.println("MySQL Driver Found");
        } catch (java.lang.ClassNotFoundException e) {
            jLabelDBStatus.setText("Database Error Connection | MySQL Driver Error");
            throw (e);
        }
    }
    //Make Connection
    protected Connection makeCon (String host, String database, String user, String password)
          throws Exception {

            String url = "";
            try {
                url = "jdbc:mysql://127.0.0.1:3306/dbuser";
                Connection con = DriverManager.getConnection(url, user, password);
            jLabelDBStatus.setText("Database Connected");
            return con;
            } catch (java.sql.SQLException e) {
            jLabelDBStatus.setText("Database Error Connection");
            throw (e);
            }
    }
    //Connection and process
    public void runMe(String host, String database, String user, String password, String tempID, String tempAddress,String tempCity,String tempFirstName,String tempLastName,String tempMI,String tempState,String tempPhone,Boolean update)
            throws Exception {
        
        /* run driverTest method shown below */
        driverTest();

        /* make the connection to the database */
        Connection conMe = makeCon(host, database, user, password);
        
        /*Run Query*/
        try {
            Statement cs = conMe.createStatement();
            String selectQuery = "SELECT * FROM dbuser.staffinfo";
            ResultSet rs = cs.executeQuery(selectQuery);
            
            //Declare arraylist for selected elements
            ArrayList<String> arrayID = new ArrayList<>();
            ArrayList<String> arrayLastName = new ArrayList<>();
            ArrayList<String> arrayFirstName = new ArrayList<>();
            ArrayList<String> arrayMI = new ArrayList<>();
            ArrayList<String> arrayAddress = new ArrayList<>();
            ArrayList<String> arrayCity = new ArrayList<>();
            ArrayList<String> arrayState = new ArrayList<>();
            ArrayList<String> arrayTelephone = new ArrayList<>();
            ArrayList<String> arrayEmail = new ArrayList<>();
            
            int counter = 0;
            //Gather elements
            while(rs.next()){
                    arrayID.add(rs.getString("id"));
                    arrayLastName.add(rs.getString("lastName"));
                    arrayFirstName.add(rs.getString("firstName"));
                    arrayMI.add(rs.getString("mi"));
                    arrayAddress.add(rs.getString("address"));
                    arrayCity.add(rs.getString("city"));
                    arrayState.add(rs.getString("state"));
                    arrayTelephone.add(rs.getString("telephone"));
                    arrayEmail.add(rs.getString("email"));
                    counter++;
            }
            //Balance Handle
            boolean idExistent = false;
            for(int o = 0; o < counter; o++){
                    if(arrayID.get(o).equals(tempID) && !"true".equals(tempPhone)){
                        idExistent = true;
                        JOptionPane.showMessageDialog(rootPane, "Sorry, that ID it's taken");
                        return;
                    } else if("true".equals(tempPhone) && update && arrayID.get(o).equals(tempID)){
                        jTextFieldID.setText(arrayID.get(o));
                        jTextFieldAD.setText(arrayAddress.get(o));
                        jTextFieldCT.setText(arrayCity.get(o));
                        jTextFieldFN.setText(arrayFirstName.get(o));
                        jTextFieldLN.setText(arrayLastName.get(o));
                        jTextFieldMI.setText(arrayMI.get(o));
                        jTextFieldST.setText(arrayState.get(o));
                        jTextFieldTP.setText(arrayTelephone.get(o));
                        return;
                    }
            }
            if(!update && !idExistent){
                String tempEmail = tempFirstName + "NoEmail";
                String insertQuery = "INSERT INTO dbuser.staffinfo (ID,LASTNAME,FIRSTNAME,MI,ADDRESS,CITY,STATE,TELEPHONE,EMAIL)" + " VALUES ('" + tempID + "','" + tempLastName + "','" + tempFirstName + "','" + tempMI + "','" + tempAddress  + "','" + tempCity  + "','" + tempState  + "','" + tempPhone  + "','" + tempEmail + "')";
                int row = cs.executeUpdate(insertQuery);
                JOptionPane.showMessageDialog(rootPane, "Staff Account Created Successfully");
            } else if(update){
                String updateQuery = "UPDATE dbuser.staffinfo SET lastName = '" + tempLastName + "', firstName = '" + tempFirstName + "', mi = '" + tempMI + "', address = '" + tempAddress + "', city = '" + tempCity + "', state = '" + tempState + "', telephone = '" + tempPhone + "' WHERE id = '" + tempID + "'";
            }
        } catch (SQLException e) {
            System.out.println ("Error executing sql statement");
            throw (e);
        }
        
        /* close the database */
        conMe.close();
        System.out.println("Closed Connection");
    }
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frameStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frameStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frameStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frameStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frameStaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JButton jButtonView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAD;
    private javax.swing.JLabel jLabelCI;
    private javax.swing.JLabel jLabelDBStatus;
    private javax.swing.JLabel jLabelFN;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelLN;
    private javax.swing.JLabel jLabelMI;
    private javax.swing.JLabel jLabelST;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextFieldAD;
    private javax.swing.JTextField jTextFieldCT;
    private javax.swing.JTextField jTextFieldFN;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldLN;
    private javax.swing.JTextField jTextFieldMI;
    private javax.swing.JTextField jTextFieldST;
    private javax.swing.JTextField jTextFieldTP;
    // End of variables declaration//GEN-END:variables
}
